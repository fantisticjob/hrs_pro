<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
 -->
<hibernate-mapping>
    <class name="com.hausontech.hrs.bean.transactionProcess.TransactionProcessHeader" table="HAE_TXN_PROCESS_HEADER" catalog="">
        <id name="txnHeaderId" column="TXN_HEADER_ID" type="java.lang.Long">
            <generator class="sequence">
                <param name="sequence">HAE_TXN_PROCESS_HEADER_S</param>
            </generator>
        </id>
        <property name="typeCode" type="java.lang.String">
            <column name="TYPE_CODE" length="240">
                <comment>事务类型</comment>
            </column>
        </property>
        <property name="ledgerId" type="java.lang.Integer">
            <column name="LEDGER_ID">
                <comment>账套</comment>
            </column>
        </property>
        <property name="companySegValue" type="java.lang.String">
            <column name="COMPANY_SEG_VAL" length="200">
                <comment>公司段</comment>
            </column>
        </property>
        <property name="currencyCode" type="java.lang.String">
            <column name="CURRENCY_CODE" length="50">
                <comment>Currency代码</comment>
            </column>
        </property>
        
        <property name="periodName" type="java.lang.String">
            <column name="PERIOD_NAME" length="50">
                <comment>期间</comment>
            </column>
        </property>
        <property name="transactionDate" type="java.util.Date">
            <column name="TXN_DATE">
                <comment>事务录入时间</comment>
            </column>
        </property>
        <property name="description" type="java.lang.String">
            <column name="DESCRIPTION" length="255">
                <comment>描述</comment>
            </column>
        </property>
        <property name="auditFlag" type="java.lang.String">
            <column name="AUDIT_FLAG" length="1">
                <comment>审核标志</comment>
            </column>
        </property>
        
        <property name="transferFlag" type="java.lang.String">
            <column name="TRANSFER_FLAY" length="1">
                <comment>是否过账</comment>
            </column>
        </property>
        <property name="creationDate" type="java.util.Date">
            <column name="CREATED_DATE" >
                <comment>创建时间</comment>
            </column>
        </property>
         <property name="createdBy" type="java.lang.String">
            <column name="CREATED_BY" length="150">
                <comment>创建人</comment>
            </column>
        </property>
        <property name="lastUpdateDate" type="java.util.Date">
            <column name="UPDATED_DATE" >
                <comment>更新时间</comment>
            </column>
        </property>
         <property name="lastUpdatedBy" type="java.lang.String">
            <column name="UPDATED_BY" length="150">
                <comment>更新人</comment>
            </column>
        </property>
    </class>
    
    <class name="com.hausontech.hrs.bean.transactionProcess.TransactionProcType" table="HAE_TXN_PROCESS_TYPE" catalog="">
        <id name="typeId" column="TYPE_ID" type="java.lang.Integer">
            <generator class="assigned" />
        </id>
        <property name="typeCode" type="java.lang.String">
            <column name="TYPE_CODE" length="50">
                <comment>事务类型代码</comment>
            </column>
        </property>
        <property name="typeName" type="java.lang.String">
            <column name="TYPE_NAME" length="100">
                <comment>事务类型名称</comment>
            </column>
        </property>
        <property name="typeDesc" type="java.lang.String">
            <column name="TYPE_DESC" length="255">
                <comment>事务类型描述</comment>
            </column>
        </property>
    </class>

    <class name="com.hausontech.hrs.bean.transactionProcess.TransactionProcessLine" table="HAE_TXN_PROCESS_LINE" catalog="">
        <id name="txnLineId" column="TXN_LINE_ID" type="java.lang.Long">
            <generator class="sequence">
                <param name="sequence">HAE_TXN_PROCESS_LINE_S</param>
            </generator>
        </id>
        <property name="seqNumber" type="java.lang.Integer">
            <column name="SEQ_NUM">
                <comment>行号</comment>
            </column>
        </property>
        <property name="txnHeaderId" type="java.lang.Long">
            <column name="TXN_HEADER_ID">
                <comment>事务头ID</comment>
            </column>
        </property>
        <property name="ledgerId" type="java.lang.Integer">
            <column name="LEDGER_ID">
                <comment>账套</comment>
            </column>
        </property>
        <property name="finElement" type="java.lang.String">
            <column name="FIN_ELEMENT" length="150">
                <comment>财务要素</comment>
            </column>
        </property>
        <property name="segment1" type="java.lang.String">
            <column name="SEGMENT1" length="150">
                <comment>SEGMENT1</comment>
            </column>
        </property>
        <property name="segment2" type="java.lang.String">
            <column name="SEGMENT2" length="150">
                <comment>SEGMENT2</comment>
            </column>
        </property>        
        <property name="segment3" type="java.lang.String">
            <column name="SEGMENT3" length="150">
                <comment>SEGMENT3</comment>
            </column>
        </property>
        <property name="segment4" type="java.lang.String">
            <column name="SEGMENT4" length="150">
                <comment>SEGMENT4</comment>
            </column>
        </property>        
        <property name="segment5" type="java.lang.String">
            <column name="SEGMENT5" length="150">
                <comment>SEGMENT5</comment>
            </column>
        </property>        
        <property name="segment6" type="java.lang.String">
            <column name="SEGMENT6" length="150">
                <comment>SEGMENT6</comment>
            </column>
        </property>        
        <property name="segment7" type="java.lang.String">
            <column name="SEGMENT7" length="150">
                <comment>SEGMENT7</comment>
            </column>
        </property>        
        <property name="segment8" type="java.lang.String">
            <column name="SEGMENT8" length="150">
                <comment>SEGMENT8</comment>
            </column>
        </property>        
        <property name="segment9" type="java.lang.String">
            <column name="SEGMENT9" length="150">
                <comment>SEGMENT9</comment>
            </column>
        </property>        
        <property name="segment10" type="java.lang.String">
            <column name="SEGMENT10" length="150">
                <comment>SEGMENT10</comment>
            </column>
        </property>        
        <property name="segment11" type="java.lang.String">
            <column name="SEGMENT11" length="150">
                <comment>SEGMENT11</comment>
            </column>
        </property>
        <property name="segment12" type="java.lang.String">
            <column name="SEGMENT12" length="150">
                <comment>SEGMENT12</comment>
            </column>
        </property>        
        <property name="segment13" type="java.lang.String">
            <column name="SEGMENT13" length="150">
                <comment>SEGMENT13</comment>
            </column>
        </property>
        <property name="segment14" type="java.lang.String">
            <column name="SEGMENT14" length="150">
                <comment>SEGMENT14</comment>
            </column>
        </property>        
        <property name="segment15" type="java.lang.String">
            <column name="SEGMENT15" length="150">
                <comment>SEGMENT15</comment>
            </column>
        </property>        
        <property name="segment16" type="java.lang.String">
            <column name="SEGMENT16" length="150">
                <comment>SEGMENT16</comment>
            </column>
        </property>        
        <property name="segment17" type="java.lang.String">
            <column name="SEGMENT17" length="150">
                <comment>SEGMENT17</comment>
            </column>
        </property>        
        <property name="segment18" type="java.lang.String">
            <column name="SEGMENT18" length="150">
                <comment>SEGMENT18</comment>
            </column>
        </property>        
        <property name="segment19" type="java.lang.String">
            <column name="SEGMENT19" length="150">
                <comment>SEGMENT19</comment>
            </column>
        </property>        
        <property name="segment20" type="java.lang.String">
            <column name="SEGMENT20" length="150">
                <comment>SEGMENT20</comment>
            </column>
        </property>        
        <property name="attribute1" type="java.lang.String">
            <column name="ATTRIBUTE1" length="150">
                <comment>ATTRIBUTE1</comment>
            </column>
        </property>
        <property name="attribute2" type="java.lang.String">
            <column name="ATTRIBUTE2" length="150">
                <comment>ATTRIBUTE2</comment>
            </column>
        </property>        
        <property name="attribute3" type="java.lang.String">
            <column name="ATTRIBUTE3" length="150">
                <comment>ATTRIBUTE3</comment>
            </column>
        </property> 
        <property name="attribute4" type="java.lang.String">
            <column name="ATTRIBUTE4" length="150">
                <comment>ATTRIBUTE4</comment>
            </column>
        </property>         
        <property name="attribute5" type="java.lang.String">
            <column name="ATTRIBUTE5" length="150">
                <comment>ATTRIBUTE5</comment>
            </column>
        </property>         
        <property name="amountDR" type="java.lang.Double">
            <column name="AMOUNT_DR">
                <comment>借方金额</comment>
            </column>
        </property>        
        <property name="amountCR" type="java.lang.Double">
            <column name="AMOUNT_CR">
                <comment>贷方金额</comment>
            </column>
        </property>
        <property name="description" type="java.lang.String">
            <column name="DESCRIPTION" length="255">
                <comment>描述</comment>
            </column>
        </property>
        <property name="info" type="java.lang.String" update="false"  insert="false">
            <column name="INFO" length="255">
                <comment>公司_部门_会计科目</comment>
            </column>
        </property>
        <property name="creationDate" type="java.util.Date">
            <column name="CREATED_DATE" >
                <comment>创建时间</comment>
            </column>
        </property>
         <property name="createdBy" type="java.lang.String">
            <column name="CREATED_BY" length="150">
                <comment>创建人</comment>
            </column>
        </property>
        <property name="lastUpdateDate" type="java.util.Date">
            <column name="UPDATED_DATE" >
                <comment>更新时间</comment>
            </column>
        </property>
         <property name="lastUpdatedBy" type="java.lang.String">
            <column name="UPDATED_BY" length="150">
                <comment>更新人</comment>
            </column>
        </property>
    </class>

    <sql-query name="getTransactionProcHeaderWithSecurity">
        <return alias="st" class="com.hausontech.hrs.bean.transactionProcess.TransactionProcessHeader"/>
        <![CDATA[
            select st.TXN_HEADER_ID, st.TYPE_CODE, st.LEDGER_ID, st.COMPANY_SEG_VAL, st.CURRENCY_CODE, st.PERIOD_NAME,
                   st.TXN_DATE, st.DESCRIPTION, st.AUDIT_FLAG, st.TRANSFER_FLAY,
				   st.CREATED_BY, st.CREATED_DATE, st.UPDATED_BY, st.UPDATED_DATE	
            from HAE_TXN_PROCESS_HEADER st
            where   st.TYPE_CODE = nvl(:typeCode, st.TYPE_CODE) and st.LEDGER_ID = nvl(:ledgerId, st.LEDGER_ID) 
                and st.COMPANY_SEG_VAL = nvl(:compCode, st.COMPANY_SEG_VAL) and st.PERIOD_NAME = nvl(:period, st.PERIOD_NAME) 
                and st.AUDIT_FLAG = nvl(:auditFlag, st.AUDIT_FLAG) and st.TRANSFER_FLAY = nvl(:transferFlag, st.TRANSFER_FLAY)          
                and EXISTS (SELECT 1
                            FROM HRS_CORE_USER_AUTHORITY SEC
                            WHERE 1 = 1
                            AND :userName = SEC.USER_NAME
                            AND st.COMPANY_SEG_VAL BETWEEN
                                      DECODE(SEC.COMPANY_CODE_FROM,'ALL','0',SEC.COMPANY_CODE_FROM) AND
                                      NVL(SEC.COMPANY_CODE_TO, 'ZZZ')
                                AND st.LEDGER_ID = SEC.LEDGER_ID)
                order by st.TXN_DATE, st.LEDGER_ID, st.COMPANY_SEG_VAL, st.PERIOD_NAME
        ]]>
    </sql-query>
    
    <sql-query name="getTxnProcHeaderCountWithSecurity">
        <![CDATA[
            select count(1)	
            from HAE_TXN_PROCESS_HEADER st
            where   st.TYPE_CODE = nvl(:typeCode, st.TYPE_CODE) and st.LEDGER_ID = nvl(:ledgerId, st.LEDGER_ID) 
                and st.COMPANY_SEG_VAL = nvl(:compCode, st.COMPANY_SEG_VAL) and st.PERIOD_NAME = nvl(:period, st.PERIOD_NAME) 
                and st.AUDIT_FLAG = nvl(:auditFlag, st.AUDIT_FLAG) and st.TRANSFER_FLAY = nvl(:transferFlag, st.TRANSFER_FLAY)          
                and EXISTS (SELECT 1
                            FROM HRS_CORE_USER_AUTHORITY SEC
                            WHERE 1 = 1
                            AND :userName = SEC.USER_NAME
                            AND st.COMPANY_SEG_VAL BETWEEN
                                      DECODE(SEC.COMPANY_CODE_FROM,'ALL','0',SEC.COMPANY_CODE_FROM) AND
                                      NVL(SEC.COMPANY_CODE_TO, 'ZZZ')
                                AND st.LEDGER_ID = SEC.LEDGER_ID)
                order by st.TXN_DATE desc , st.LEDGER_ID, st.COMPANY_SEG_VAL, st.PERIOD_NAME desc
        ]]>
    </sql-query>
   
    <sql-query name="getTransactionProcLineWithSecurity">
        <return alias="st" class="com.hausontech.hrs.bean.transactionProcess.TransactionProcessLine"/>
        <![CDATA[
            select st.TXN_LINE_ID, st.SEQ_NUM, st.TXN_HEADER_ID, st.LEDGER_ID, st.FIN_ELEMENT, st.SEGMENT1, st.SEGMENT2, st.SEGMENT3,
                   st.SEGMENT4, st.SEGMENT5, st.SEGMENT6, st.SEGMENT7, st.SEGMENT8, st.SEGMENT9, st.SEGMENT10, st.SEGMENT11, st.SEGMENT12,
                   st.SEGMENT13, st.SEGMENT14, st.SEGMENT15, st.SEGMENT16, st.SEGMENT17, st.SEGMENT18, st.SEGMENT19, st.SEGMENT20,
                   st.ATTRIBUTE1, st.ATTRIBUTE2, st.ATTRIBUTE3, st.ATTRIBUTE4, st.ATTRIBUTE5, st.AMOUNT_DR, st.AMOUNT_CR, st.DESCRIPTION,
                          (SELECT DV.DESCRIPTION FROM HRS_CORE_DIMENSION D,
                          HRS_CORE_DIMENSION_VALUE DV
                          WHERE  D.DIMENSION_ID=DV.DIMENSION_ID
                          AND D.DIM_SEGMENT='SEGMENT1'
                          AND DV.DIM_VALUE=st.SEGMENT1)||'.'
                          ||(SELECT DV.DESCRIPTION FROM HRS_CORE_DIMENSION D,
                          HRS_CORE_DIMENSION_VALUE DV
                          WHERE  D.DIMENSION_ID=DV.DIMENSION_ID
                          AND D.DIM_SEGMENT='SEGMENT2'
                          AND DV.DIM_VALUE=st.SEGMENT2)||'.'
                          ||(SELECT DV.DESCRIPTION FROM HRS_CORE_DIMENSION D,
                          HRS_CORE_DIMENSION_VALUE DV
                         WHERE  D.DIMENSION_ID=DV.DIMENSION_ID
                         AND D.DIM_SEGMENT='SEGMENT3'
                         AND DV.DIM_VALUE=st.SEGMENT3) INFO,
				   st.CREATED_BY, st.CREATED_DATE, st.UPDATED_BY, st.UPDATED_DATE	
            from HAE_TXN_PROCESS_LINE st
            where  st.TXN_HEADER_ID = nvl(:txnProcHeaderId, st.TXN_HEADER_ID) and st.LEDGER_ID = nvl(:ledgerId, st.LEDGER_ID) and st.FIN_ELEMENT = nvl(:finElement, st.FIN_ELEMENT)       
                and EXISTS (SELECT 1
                            FROM HRS_CORE_USER_AUTHORITY SEC
                            WHERE 1 = 1
                            AND :userName = SEC.USER_NAME
                            AND st.SEGMENT1 BETWEEN
                                      DECODE(SEC.COMPANY_CODE_FROM,'ALL','0',SEC.COMPANY_CODE_FROM) AND
                                      NVL(SEC.COMPANY_CODE_TO, 'ZZZ')
                                AND st.LEDGER_ID = SEC.LEDGER_ID)
                order by st.TXN_LINE_ID, st.TXN_HEADER_ID, st.LEDGER_ID, st.FIN_ELEMENT
        ]]>
    </sql-query>
    
    
   <sql-query name="getTxnProcLineCountWithSecurity">
        <![CDATA[
            select count(1)	
            from HAE_TXN_PROCESS_LINE st
            where  st.TXN_HEADER_ID = nvl(:txnProcHeaderId, st.TXN_HEADER_ID) and st.LEDGER_ID = nvl(:ledgerId, st.LEDGER_ID) and st.FIN_ELEMENT = nvl(:finElement, st.FIN_ELEMENT)       
                and EXISTS (SELECT 1
                            FROM HRS_CORE_USER_AUTHORITY SEC
                            WHERE 1 = 1
                            AND :userName = SEC.USER_NAME
                            AND st.SEGMENT1 BETWEEN
                                      DECODE(SEC.COMPANY_CODE_FROM,'ALL','0',SEC.COMPANY_CODE_FROM) AND
                                      NVL(SEC.COMPANY_CODE_TO, 'ZZZ')
                                AND st.LEDGER_ID = SEC.LEDGER_ID)
                order by st.TXN_HEADER_ID, st.LEDGER_ID, st.FIN_ELEMENT
        ]]>
    </sql-query>
</hibernate-mapping>
